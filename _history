{"entries":[{"timestamp":1740838090071,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"0\" y=\"0\""],[0,"></b"]],"start1":67,"start2":67,"length1":20,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"205\" y=\"0\""],[0,"></b"]],"start1":107,"start2":107,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"basic.forever(function on_forever() {\n    \n})"],[0,"\n"]],"start1":0,"start2":0,"length1":46,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"apa102\": \"github:microsoft/pxt-apa102#v0.0.1\""],[0,"\n   "]],"start1":133,"start2":133,"length1":64,"length2":8},{"diffs":[[0,".md\""],[-1,",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\""],[1,"\n    ],\n    \"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":217,"start2":217,"length1":64,"length2":44}]},{"type":"added","filename":"main.py","value":"def on_forever():\n    pass\nbasic.forever(on_forever)\n"}]},{"timestamp":1740838760934,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"><block "],[1,"type=\"pxt-on-start\" x=\"0\" y=\"0\"></block><block "],[0,"type=\"de"]],"start1":77,"start2":77,"length1":16,"length2":63},{"diffs":[[0," x=\""],[-1,"10"],[1,"205"],[0,"\" y=\""],[-1,"1"],[0,"0\"><"]],"start1":153,"start2":153,"length1":16,"length2":16}]}]},{"timestamp":1740838771041,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_plot\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></statement"],[1,"10\" y=\"10\""],[0,"></b"]],"start1":106,"start2":106,"length1":404,"length2":18}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"() {\n    led.plot(0, 0)"],[1,"on_forever() {\n    "],[0,"\n})\n"]],"start1":19,"start2":19,"length1":31,"length2":27}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"blocks"],[1,"py"],[0,"prj\"\n}\n"]],"start1":320,"start2":320,"length1":21,"length2":17}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"basic.forever(function () {\n    led.plot(0, 0)\n}"],[1,"def on_forever():\n    pass\nbasic.forever(on_forever"],[0,")\n"]],"start1":0,"start2":0,"length1":50,"length2":53}]}]},{"timestamp":1740839363497,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"ion "],[-1,"on_forever() {\n    const buf = hex`000000 000000 000000`; // red, reen, blue colors\n    apa102.sendRGBBuffer(buf, DigitalPin.P1, DigitalPin.P2);\n    pause(100"],[1,"() {\n    led.plot(0, "],[0,"0)\n}"]],"start1":19,"start2":19,"length1":166,"length2":29}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"itor\": \""],[-1,"t"],[1,"block"],[0,"sprj\"\n}\n"]],"start1":320,"start2":320,"length1":17,"length2":21}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"def on_"],[1,"basic."],[0,"forever("],[-1,"):"],[1,"function () {"],[0,"\n   "]],"start1":0,"start2":0,"length1":21,"length2":31},{"diffs":[[0," 0)\n"],[-1,"basic.forever(on_forever"],[1,"}"],[0,")\n"]],"start1":43,"start2":43,"length1":30,"length2":7}]}]},{"timestamp":1740839939109,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"hex`"],[-1,"ffffff 00ff00 ffffff"],[1,"000000 000000 000000"],[0,"`; /"]],"start1":54,"start2":54,"length1":28,"length2":28},{"diffs":[[0,"talPin.P"],[-1,"0"],[1,"1"],[0,", Digita"]],"start1":141,"start2":141,"length1":17,"length2":17},{"diffs":[[0,"talPin.P"],[-1,"1"],[1,"2"],[0,");\n    p"]],"start1":156,"start2":156,"length1":17,"length2":17}]}]},{"timestamp":1740840100654,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"nst "],[-1,"palette = hex`\n    00000\n    ff0000\n    00ff00\n    0000ff\n   "],[1,"buf = hex`ffffff 00ff00"],[0," ffffff"],[-1,"\n    "],[0,"`; //"],[-1," add up to 16 colors\n    const buf = hex`01234`; // dark,"],[0," red, "],[-1,"g"],[0,"reen"]],"start1":44,"start2":44,"length1":150,"length2":49},{"diffs":[[0,"blue"],[-1,", white"],[1," colors"],[0,"\n   "]],"start1":95,"start2":95,"length1":15,"length2":15},{"diffs":[[0,"send"],[-1,"Palette"],[1,"RGB"],[0,"Buff"]],"start1":118,"start2":118,"length1":15,"length2":11},{"diffs":[[0,"buf,"],[-1," palette,"],[0," Dig"]],"start1":132,"start2":132,"length1":17,"length2":8},{"diffs":[[0,"talPin.P"],[-1,"1"],[1,"0"],[0,", Digita"]],"start1":141,"start2":141,"length1":17,"length2":17},{"diffs":[[0,"in.P"],[-1,"2"],[1,"1"],[0,");\n"],[1,"    pause(1000)\n"],[0,"})\n"]],"start1":160,"start2":160,"length1":11,"length2":27}]}]},{"timestamp":1740840792744,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0," x=\""],[-1,"1"],[0,"0\" y=\""],[-1,"1"],[0,"0\"><"]],"start1":106,"start2":106,"length1":16,"length2":14},{"diffs":[[0,"pe=\""],[-1,"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"const palette = hex`\" line1=\"    00000\" line2=\"    ff0000\" line3=\"    00ff00\" line4=\"    0000ff\" line5=\"    ffffff\" line6=\"    `;\" numlines=\"7\" declaredvars=\"palette\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">add up to 16 colors</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"const buf = hex`01234`;\" numlines=\"1\" declaredvars=\"buf\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">dark, red, green, blue, white</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"apa102.sendPaletteBuffer(buf, palette, DigitalPin.P1, DigitalPin.P2);\" numlines=\"1\"></mutation></block></next></block></next"],[1,"device_plot\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow></value"],[0,"></b"]],"start1":154,"start2":154,"length1":790,"length2":336}]}]},{"timestamp":1740840983222,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"pe=\""],[-1,"pxt-on-start"],[1,"device_forever"],[0,"\" x=\""],[-1,"36"],[1,"10"],[0,"\" y=\""],[-1,"52"],[1,"10"],[0,"\"><s"]],"start1":87,"start2":87,"length1":34,"length2":36},{"diffs":[[0,"pe=\""],[-1,"brightboard_clear\"><next><block type=\"set_board_color\"><value name=\"rgb\"><shadow type=\"brightColorNumberPicker\"><field name=\"value\">0xff0000</field></shadow></value"],[1,"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"const palette = hex`\" line1=\"    00000\" line2=\"    ff0000\" line3=\"    00ff00\" line4=\"    0000ff\" line5=\"    ffffff\" line6=\"    `;\" numlines=\"7\" declaredvars=\"palette\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">add up to 16 colors</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"const buf = hex`01234`;\" numlines=\"1\" declaredvars=\"buf\"></mutation><comment pinned=\"false\" h=\"80\" w=\"160\">dark, red, green, blue, white</comment><next><block type=\"typescript_statement\"><mutation xmlns=\"http://www.w3.org/1999/xhtml\" line0=\"apa102.sendPaletteBuffer(buf, palette, DigitalPin.P1, DigitalPin.P2);\" numlines=\"1\"></mutation></block></next"],[0,"></b"]],"start1":156,"start2":156,"length1":172,"length2":775}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"b"],[-1,"rightboard.doClear()\nbrightboard.setBoardColor(0xff0000"],[1,"asic.forever(function on_forever() {\n    const palette = hex`\n    00000\n    ff0000\n    00ff00\n    0000ff\n    ffffff\n    `; // add up to 16 colors\n    const buf = hex`01234`; // dark, red, green, blue, white\n    apa102.sendPaletteBuffer(buf, palette, DigitalPin.P1, DigitalPin.P2);\n}"],[0,")\n"]],"start1":0,"start2":0,"length1":58,"length2":285}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0,"0.1\""],[-1,",\n        \"brightboard\": \"github:brightwearables/pxt-microbit-brightboard#v0.7.2\""],[0,"\n   "]],"start1":189,"start2":189,"length1":89,"length2":8},{"diffs":[[0,"itor\": \""],[-1,"py"],[1,"ts"],[0,"prj\"\n}\n"]],"start1":320,"start2":320,"length1":17,"length2":17}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"brightboard.do_clear()\nbrightboard.set_board_color(0xff0000)"],[1,"def on_forever():\n    led.plot(0, 0)\nbasic.forever(on_forever)\n"]],"start1":0,"start2":0,"length1":60,"length2":63}]}]},{"timestamp":1740841573438,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"x=\"3"],[-1,"2"],[1,"6"],[0,"\" y=\"5"],[-1,"4\"></block><block type=\"device_forever\" x=\"46\" y=\"338\"><statement name=\"HANDLER\"><block type=\"device_led_toggle\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random"],[1,"2\"><statement name=\"HANDLER\"><block type=\"brightboard_clear\"><next><block type=\"set_board_color"],[0,"\"><v"]],"start1":105,"start2":105,"length1":678,"length2":110},{"diffs":[[0,"me=\""],[-1,"min"],[1,"rgb"],[0,"\"><s"]],"start1":222,"start2":222,"length1":11,"length2":11},{"diffs":[[0,"pe=\""],[-1,"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">1"],[1,"brightColorNumberPicker\"><field name=\"value\">0xff00"],[0,"00</"]],"start1":241,"start2":241,"length1":269,"length2":59}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"b"],[-1,"asic.forever(function on_forever() {\n    led.toggle(randint(0, 4), randint(0, 4))\n    basic.pause(100)\n})\n//  to remind us which pin serves which function\nlet DAT = DigitalPin.P1\nlet CLK = DigitalPin.P0\n//  number of pixels in the chain\nlet NUM_PIXELS = 8\n//  default brightness setting\nlet BRIGHTNESS = 7\n//  list of pixels\nlet list = [1, 2, 3]"],[1,"rightboard.doClear()\nbrightboard.setBoardColor(0xff0000)"],[0,"\n"]],"start1":0,"start2":0,"length1":347,"length2":58}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"def on_forever():\n    led.toggle(randint(0, 4), randint(0, 4))\n    basic.pause(100)\n\n\nbasic.forever(on_forever)\n\n# to remind us which pin serves which function\nDAT = DigitalPin.P1\nCLK = DigitalPin.P0\n# number of pixels in the chain\nNUM_PIXELS = 8\n# default brightness setting\nBRIGHTNESS = 7\n# list of pixels\nlist = [1, 2, 3]\n\n"],[1,"brightboard.do_clear()\nbrightboard.set_board_color(0xff0000)"]],"start1":0,"start2":0,"length1":326,"length2":60}]}]},{"timestamp":1740842176944,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"1, 2, 3]"],[-1,"\nlist = [1, 2, 3]"],[0,"\n\n"]],"start1":316,"start2":316,"length1":27,"length2":10}]}]},{"timestamp":1740842181489,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"IXELS = "],[-1,"3"],[1,"8"],[0,"\n//  def"]],"start1":247,"start2":247,"length1":17,"length2":17},{"diffs":[[0,"let "],[-1,"pixels"],[1,"list"],[0," = "],[-1,"["],[0,"[1, 2, 3"],[-1,", 4], [1, 2, 3, 4], [1, 2, 3, 4]]\n//  Set the brightness of all pixels - 0 - 1.\nfunction set_brightness(brightness: number) {\n    if (brightness < 0 || brightness > 1) {\n        return\n    }\n    \n    for (let x = 0; x < NUM_PIXELS; x++) {\n        pixels[x][3] = Math.trunc(31.0 * brightness) & 0b11111\n    }\n}\n\n//  Pulse a byte of data a bit at a time\nfunction write_byte(byte: any) {\n    let bits =  {TODO: ListComp} \n    for (let x = 0; x < 8; x++) {\n        pins.digitalWritePin(DAT, bits[x])\n        pins.digitalWritePin(CLK, 1)\n        pins.digitalWritePin(CLK, 0)\n    }\n}\n"],[1,"]"],[0,"\n"]],"start1":326,"start2":326,"length1":601,"length2":21}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"unction\n"],[-1,"\n"],[0,"DAT = Di"]],"start1":152,"start2":152,"length1":17,"length2":16},{"diffs":[[0,"IXELS = "],[-1,"3"],[1,"8"],[0,"\n# defau"]],"start1":237,"start2":237,"length1":17,"length2":17},{"diffs":[[0,"els\n"],[-1,"pixels"],[1,"list"],[0," = "],[-1,"["],[0,"[1,"],[-1,"2,3,4], [1,2,3,4], [1,2,3,4]]\n\n# Set the brightness of all pixels - 0 - 1.\ndef set_brightness(brightness):\n    if brightness < 0 or brightness > 1:\n        return\n    for x in range(NUM_PIXELS):\n        pixels[x][3] = int(31.0 * brightness) & 0b11111\n\n# Pulse a byte of data a bit at a time\ndef write_byte(byte):\n    bits = [byte >> i & 1 for i in range(7,-1,-1)]\n    for x in range(8):\n        pins.digital_write_pin(DAT, bits[x])\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)"],[1," 2, 3]\nlist = [1, 2, 3]\n"],[0,"\n"]],"start1":304,"start2":304,"length1":525,"length2":39}]}]},{"timestamp":1740842792525,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"4]]\n"],[-1,"pixels = [[0,0,0,BRIGHTNESS]] * NUM_PIXELS"],[0,"\n# S"]],"start1":348,"start2":348,"length1":50,"length2":8}]}]},{"timestamp":1740842793680,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0," pixels\n"],[-1,"// "],[1,"let"],[0," pixels "]],"start1":318,"start2":318,"length1":19,"length2":19},{"diffs":[[0,"[[1,"],[1," "],[0,"2,"],[1," "],[0,"3,"],[1," "],[0,"4], [1,"],[1," "],[0,"2,"],[1," "],[0,"3,"],[1," "],[0,"4], [1,"],[1," "],[0,"2"],[-1,",3,4]]\n//  Initialize pixel list manually (avoiding list comprehensions)\nfunction init_pixels(): any[] {\n    let pixel_list = []\n    for (let i = 0; i < NUM_PIXELS; i++) {\n        pixel_list.push([0, 0"],[0,", "],[-1,"0, BRIGHTNESS])\n    }\n    //  Each pixel is a list of [R, G, B, Brightness]\n    return pixel_list\n}\n\n//  Initialize pixels list\nlet pixels = init_pixels()\n//  pixels = [\n//      [0, 0, 0, BRIGHTNESS],\n//      [0, 0, 0, BRIGHTNESS],\n//      [0, 0, 0, BRIGHTNESS]\n//  "],[1,"3, 4]"],[0,"]\n//"]],"start1":339,"start2":339,"length1":500,"length2":45},{"diffs":[[0,"te: "],[-1,"number"],[1,"any"],[0,") {\n    "],[-1,"//  bits = [byte >> i & 1 for i in range(7,-1,-1)]\n    let bits = []\n    for (let i = 7; i > -1; i += -1) {\n        bits.push(byte >> i & 1)\n    }"],[1,"let bits =  {TODO: ListComp} "],[0,"\n   "]],"start1":722,"start2":722,"length1":168,"length2":48}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"unction\n"],[1,"\n"],[0,"DAT = Di"]],"start1":152,"start2":152,"length1":16,"length2":17},{"diffs":[[0," pixels\n"],[-1,"# "],[0,"pixels ="]],"start1":301,"start2":301,"length1":18,"length2":16},{"diffs":[[0,"4]]\n"],[-1,"# Initialize pixel list manually (avoiding list comprehensions)\ndef init_pixels():\n    pixel_list = []\n    for i in range(NUM_PIXELS):\n        pixel_list.append("],[1,"pixels = ["],[0,"[0,"],[-1," "],[0,"0,"],[-1," "],[0,"0,"],[-1," "],[0,"BRIG"]],"start1":348,"start2":348,"length1":179,"length2":25},{"diffs":[[0,"ESS]"],[-1,")  # Each pixel is a list of [R, G, B, Brightness]\n    return pixel_list\n\n# Initialize pixels list\npixels = init_pixels()\n# pixels = [\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS]\n# ]\n"],[1,"] * NUM_PIXELS"],[0,"\n# S"]],"start1":376,"start2":376,"length1":233,"length2":22},{"diffs":[[0,"\n   "],[-1," #"],[0," bit"]],"start1":676,"start2":676,"length1":10,"length2":8},{"diffs":[[0,"1)]\n"],[-1,"    bits = []\n    for i in range(7, -1, -1):\n        bits.append((byte >> i) & 1)\n\n"],[0,"    "]],"start1":724,"start2":724,"length1":91,"length2":8}]}]},{"timestamp":1740843296382,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"\n}\n\n"],[-1,"//  Clear all of the pixels        \nfunction clear() {\n    for (let x = 0; x < NUM_PIXELS; x++) {\n        for (let i = 0; i < 3; i++) {\n            pixels[x][i] = 0\n        }\n    }\n}\n\n"],[0,"//  "]],"start1":1110,"start2":1110,"length1":192,"length2":8}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"11\n\n"],[-1,"# Clear all of the pixels        \ndef clear():\n    for x in range(NUM_PIXELS):\n        for i in range(0, 3):\n            pixels[x][i] = 0\n\n"],[0,"# Pu"]],"start1":978,"start2":978,"length1":147,"length2":8},{"diffs":[[0,",0)\n"],[-1,"        \n# Latch procedure - 36 clock pulses        \ndef eof():\n    pins.digital_write_pin(DAT, 0)\n    for x in range(36):\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n\n# Latch at start - 32 clock pulses\ndef sof():\n    pins.digital_write_pin(DAT, 0)\n    for x in range(32):\n        CLK.write_digital(1)\n        CLK.write_digital(0)\n"]],"start1":1319,"start2":1319,"length1":367,"length2":4}]}]},{"timestamp":1740843892441,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//  def"],[1,"basic.forever(function"],[0," on_fore"]],"start1":0,"start2":0,"length1":15,"length2":30},{"diffs":[[0,"er()"],[-1,":\n//  "],[1," {\n"],[0,"    "]],"start1":31,"start2":31,"length1":14,"length2":11},{"diffs":[[0,"(0, 4))\n"],[-1,"//  "],[0,"    basi"]],"start1":75,"start2":75,"length1":20,"length2":16},{"diffs":[[0,"00)\n"],[-1,"//  basic.forever(on_forever"],[1,"}"],[0,")\n//"]],"start1":100,"start2":100,"length1":36,"length2":9},{"diffs":[[0,"(): "],[-1,"number[]"],[1,"any"],[0,"[] {"]],"start1":459,"start2":459,"length1":16,"length2":11},{"diffs":[[0,"ritePin(CLK, 0)\n"],[1,""],[0,"    }\n}\n\n//  Lat"]],"start1":1661,"start2":1661,"length1":32,"length2":32},{"diffs":[[0,"\n}\n\n"],[-1,"//  Latch procedure - 36 clock pulses        \nfunction eof() {\n    pins.digitalWritePin(DAT, 0)\n    for (let x = 0; x < 36; x++) {\n        pins.digitalWritePin(CLK, 1)\n        pins.digitalWritePin(CLK, 0)\n    }\n}\n\n//  Latch at start - 32 clock pulses\nfunction sof() {\n    pins.digitalWritePin(DAT, 0)\n    for (let x = 0; x < 32; x++) {\n        pins.digitalWritePin(CLK, 1)\n        pins.digitalWritePin(CLK, 0)\n    }\n}\n\n//  Update colour and brightness values from pixels list\n//  Call this procedure to update the display\nfunction show() {\n    sof()\n    for (let pixel of pixels) {\n        let [r, g, b, brightness] = pixel\n        write_byte(0b11100000 | brightness)\n        write_byte(b)\n        write_byte(g)\n        write_byte(r)\n    }\n    eof()\n}\n\n//  Set all of the pixels in the chain to the colour and brightness (optional)\nfunction set_all(r: string, g: string, b: string, brightness: number = null) {\n    for (let x = 0; x < NUM_PIXELS; x++) {\n        set_pix(x, r, g, b, brightness)\n    }\n}\n\n//  Set the colour and brightness of an individual pixel    \nfunction set_pix(x: number, r: string, g: string, b: string, brightness: number = null) {\n    if (brightness === null) {\n        brightness = BRIGHTNESS\n    } else {\n        brightness = Math.trunc(31.0 * brightness) & 0b11111\n    }\n    \n    pixels[x] = [parseInt(r) & 0xff, parseInt(g) & 0xff, parseInt(b) & 0xff, brightness]\n}\n\n"]],"start1":1682,"start2":1682,"length1":1398,"length2":4}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[-1,"# "],[0,"def on_f"]],"start1":0,"start2":0,"length1":10,"length2":8},{"diffs":[[0,"ever():\n"],[-1,"# "],[0,"    led."]],"start1":10,"start2":10,"length1":18,"length2":16},{"diffs":[[0,"(0, 4))\n"],[-1,"# "],[0,"    basi"]],"start1":55,"start2":55,"length1":18,"length2":16},{"diffs":[[0,"(100)\n\n\n"],[-1,"# "],[0,"basic.fo"]],"start1":78,"start2":78,"length1":18,"length2":16},{"diffs":[[0,"    "],[-1,"pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n\n# Update colour and brightness values from pixels list\n# Call this procedure to update the display\ndef show():\n    sof()\n    for pixel in pixels:\n        r, g, b, brightness = pixel\n        write_byte(0b11100000 | brightness)\n        write_byte(b)\n        write_byte(g)\n        write_byte(r)\n    eof()\n\n# Set the colour and brightness of an individual pixel\ndef set_pix(x, rr, gg, bb, brightness=None):\n    if brightness is None:\n        brightness = BRIGHTNESS\n    else:\n        brightness = int(31.0 * brightness) & 0b11111\n    pixels[x] = [int(rr) & 0xff,int(gg) & 0xff,int(bb) & 0xff,brightness]\n\n# Set all of the pixels in the chain to the colour and brightness (optional)\ndef set_all(r, g, b):\n    for x in range(NUM_PIXELS):\n        set_pix(x, r, g, b, 1)\n\n# Test code and example use\nwhile True:\n    # all off\n    clear()\n    show()\n    basic.pause(1000)\n    # on red individually\n    for i in range(NUM_PIXELS):\n        set_pix(i, 0,0,0)\n        show()\n        basic.pause(100)\n    basic.pause(1000)\n    # all green\n    set_all(0,255,0)\n    show()\n    basic.pause(1000)\n    # all blue\n    set_all(0,0,255)\n    show()\n    basic.pause(1000)\n    "],[1,"CLK.write_digital(1)\n        CLK.write_digital(0)\n"]],"start1":1771,"start2":1771,"length1":1225,"length2":54}]}]},{"timestamp":1740844471366,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"of()"],[-1,"\n# Named function\ndef add(x, y, bluff=None):\n    if bluff is None:\n        return 443\n    x = int(x) & 0xff\n    return x + y "],[0,"\n\n# "]],"start1":2149,"start2":2149,"length1":133,"length2":8},{"diffs":[[0," = ["],[-1,"rr & 0xff,gg & 0xff,bb & 0xff,brightness]\n\n# Set the colour and brightness of an individual pixel\ndef set_pixx(x, rr, gg, bb):\n    brightness =5\n    brightness = int(31.0 * brightness) & 0b11111\n    pixels[x] = [rr"],[1,"int(rr)"],[0," & 0"]],"start1":2391,"start2":2391,"length1":222,"length2":15},{"diffs":[[0,"tness]\n\n"],[-1,"\n"],[0,"# Set al"]],"start1":2445,"start2":2445,"length1":17,"length2":16},{"diffs":[[0,"nge("],[-1,"add(4,5)"],[1,"NUM_PIXELS"],[0,"):\n"],[-1,"        r= 5\n        g=1\n        b =0\n"],[0,"    "]],"start1":2756,"start2":2756,"length1":57,"length2":21},{"diffs":[[0,"_pix"],[-1,"x"],[0,"(i, "],[-1,"r, g, b"],[1,"0,0,0"],[0,")\n  "]],"start1":2784,"start2":2784,"length1":20,"length2":17},{"diffs":[[0,"how()\n    basic.pause(1000)\n"],[1,"    "]],"start1":2972,"start2":2972,"length1":28,"length2":32}]}]},{"timestamp":1740845058809,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"S = "],[-1,"256"],[1,"3"],[0,"\n// "]],"start1":270,"start2":270,"length1":11,"length2":9},{"diffs":[[0,"Set "],[-1,"the colour and brightness of an individual pixel\nfunction set_pix(x: number, rr: number"],[1,"all of the pixels in the chain to the colour and brightness (optional)\nfunction set_all(r: string"],[0,", "],[-1,"g"],[0,"g: "],[-1,"number"],[1,"string"],[0,", "],[-1,"b"],[0,"b: "],[-1,"number"],[1,"string"],[0,", br"]],"start1":2467,"start2":2467,"length1":119,"length2":127},{"diffs":[[0,"    "],[-1,"if (brightness === null) {\n        brightness = BRIGHTNESS\n    } else {\n        brightness = Math.trunc(31.0 * brightness) & 0b11111\n    }\n    \n    pixels[x] = [rr & 0xff, gg & 0xff, bb & 0xff"],[1,"for (let x = 0; x < NUM_PIXELS; x++) {\n        set_pix(x, r, g, b"],[0,", br"]],"start1":2621,"start2":2621,"length1":200,"length2":73},{"diffs":[[0,"ightness"],[-1,"]"],[1,")\n    }"],[0,"\n}\n\n//  "]],"start1":2694,"start2":2694,"length1":17,"length2":23},{"diffs":[[0,"Set "],[-1,"all of the pixels in the chain to the colour and brightness (optional)"],[1,"the colour and brightness of an individual pixel    "],[0,"\nfun"]],"start1":2717,"start2":2717,"length1":78,"length2":60},{"diffs":[[0,"ion set_"],[-1,"all(r"],[1,"pix(x"],[0,": number"]],"start1":2779,"start2":2779,"length1":21,"length2":21},{"diffs":[[0,"er, "],[-1,"g: number, b"],[1,"r: string, g: string, b: string, brightness"],[0,": number"],[1," = null"],[0,") {\n    "],[-1,"for (let x = 0; x < NUM_PIXELS; x++) {\n        set_pix(x, r, g, b, 1)\n    }\n}\n\n//  Test code and example use\nwhile (true) {\n    //  all off\n    clear()\n    show()\n    //  basic.pause(1000)\n    //  on red individually\n    //  for i in range(NUM_PIXELS):\n    //      set_pix(i, 255, 0, 0)\n    //      show()\n    //      basic.pause(100)\n    set_all(255, 0, 0)\n    //  basic.pause(1000)\n    //  all green\n    set_all(0, 255, 0)\n    show()\n    //  basic.pause(1000)\n    //  all blue\n    set_all(0, 0, 255)\n    show()"],[1,"if (brightness === null) {\n        brightness = BRIGHTNESS\n    } else {\n        brightness = Math.trunc(31.0 * brightness) & 0b11111\n    }\n    \n    pixels[x] = [parseInt(r) & 0xff, parseInt(g) & 0xff, parseInt(b) & 0xff, brightness]"],[0,"\n}\n"],[1,"\n"]],"start1":2798,"start2":2798,"length1":547,"length2":306}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"S = "],[-1,"256"],[1,"3"],[0,"\n# d"]],"start1":249,"start2":249,"length1":11,"length2":9},{"diffs":[[0,"   eof()"],[1,"\n# Named function\ndef add(x, y, bluff=None):\n    if bluff is None:\n        return 443\n    x = int(x) & 0xff\n    return x + y "],[0,"\n\n# Set "]],"start1":2145,"start2":2145,"length1":16,"length2":141},{"diffs":[[0,"tness]\n\n"],[1,"# Set the colour and brightness of an individual pixel\ndef set_pixx(x, rr, gg, bb):\n    brightness =5\n    brightness = int(31.0 * brightness) & 0b11111\n    pixels[x] = [rr & 0xff,int(gg) & 0xff,int(bb) & 0xff,brightness]\n\n\n"],[0,"# Set al"]],"start1":2555,"start2":2555,"length1":16,"length2":239},{"diffs":[[0,")\n    show()\n   "],[-1," #"],[0," basic.pause(100"]],"start1":3013,"start2":3013,"length1":34,"length2":32},{"diffs":[[0,"ally\n   "],[-1," #"],[0," for i i"]],"start1":3069,"start2":3069,"length1":18,"length2":16},{"diffs":[[0,"nge("],[-1,"NUM_PIXELS):\n    #"],[1,"add(4,5)):\n        r= 5\n        g=1\n        b =0\n   "],[0,"    "]],"start1":3089,"start2":3089,"length1":26,"length2":60},{"diffs":[[0,"_pix"],[1,"x"],[0,"(i, "],[-1,"255, 0, 0"],[1,"r, g, b"],[0,")\n   "],[-1," #"],[0,"    "]],"start1":3153,"start2":3153,"length1":28,"length2":25},{"diffs":[[0,"ow()\n   "],[-1," #"],[0,"     bas"]],"start1":3181,"start2":3181,"length1":18,"length2":16},{"diffs":[[0,"\n   "],[-1," set_all(255,0,0)\n    #"],[0," bas"]],"start1":3210,"start2":3210,"length1":31,"length2":8},{"diffs":[[0,")\n    show()\n   "],[-1," #"],[0," basic.pause(100"]],"start1":3268,"start2":3268,"length1":34,"length2":32},{"diffs":[[0," show()\n"],[1,""],[0,"   "],[-1," #"],[0," basic.p"]],"start1":3342,"start2":3342,"length1":21,"length2":19}]}]},{"timestamp":1740845627034,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"mber"],[-1,", brightness: number = null"],[0,") {\n"]],"start1":2951,"start2":2951,"length1":35,"length2":8},{"diffs":[[0," b, "],[-1,"brightness)\n    }\n}\n\n//  Set all of the pixels in the chain to the colour and brightness (optional)\nfunction set_all_rand() {\n    for (let x = 0; x < NUM_PIXELS; x++) {\n        set_pix(x, randint(0, 255), randint(0, 255), randint(0, 255), randint(0, 255))\n    }\n}\n\n//  Set all of the pixels in the chain to the colour and brightness (optional)\nfunction set_brightness_gradient() {\n    for (let y = 0; y < 16; y++) {\n        for (let x = 0; x < 16; x++) {\n            set_pix(y * 16 + x, randint(0, 255), randint(0, 255), randint(0, 255), randint(0, 255))\n        }"],[1,"1)"],[0,"\n   "]],"start1":3026,"start2":3026,"length1":572,"length2":10},{"diffs":[[0,"l off\n  "],[-1,"  //"],[0,"  clear("]],"start1":3097,"start2":3097,"length1":20,"length2":16},{"diffs":[[0,"  clear()\n  "],[-1,"  //"],[0,"  show()\n   "]],"start1":3105,"start2":3105,"length1":28,"length2":24},{"diffs":[[0,"\n    // "],[-1," #"],[0,"     bas"]],"start1":3268,"start2":3268,"length1":18,"length2":16},{"diffs":[[0,"ause(100)\n  "],[-1,"  //"],[0,"  set_all(25"]],"start1":3288,"start2":3288,"length1":28,"length2":24},{"diffs":[[0,"255,"],[-1,"0,0,7)\n    //  show("],[1," 0, 0"],[0,")\n  "]],"start1":3310,"start2":3310,"length1":28,"length2":13},{"diffs":[[0,"5, 0, 0)\n    // "],[-1," #"],[0," basic.pause(100"]],"start1":3312,"start2":3312,"length1":34,"length2":32},{"diffs":[[0,"000)\n    // "],[-1," #"],[0," all green\n "]],"start1":3342,"start2":3342,"length1":26,"length2":24},{"diffs":[[0,"green\n  "],[-1,"  //"],[0,"  set_al"]],"start1":3359,"start2":3359,"length1":20,"length2":16},{"diffs":[[0,"l(0,"],[1," "],[0,"255,"],[1," "],[0,"0"],[-1,",7"],[0,")\n  "],[-1,"  //"],[0,"  sh"]],"start1":3375,"start2":3375,"length1":23,"length2":19},{"diffs":[[0,"  show()\n    // "],[-1," #"],[0," basic.pause(100"]],"start1":3390,"start2":3390,"length1":34,"length2":32},{"diffs":[[0,"\n    // "],[-1," #"],[0," all blu"]],"start1":3424,"start2":3424,"length1":18,"length2":16},{"diffs":[[0," blue\n  "],[-1,"  //"],[0,"  set_al"]],"start1":3436,"start2":3436,"length1":20,"length2":16},{"diffs":[[0,"l(0,"],[1," "],[0,"0,"],[1," "],[0,"255"],[-1,",7)\n    //  show()\n    //  set_all(255,255,255,7)\n    //  show()\n    //  # basic.pause(1000)\n    set_all_rand("],[0,")\n  "]],"start1":3452,"start2":3452,"length1":123,"length2":15}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"(r, g, b"],[-1,", brightness=None"],[0,"):\n    f"]],"start1":2528,"start2":2528,"length1":33,"length2":16},{"diffs":[[0," b, "],[-1,"brightness)\n\n# Set all of the pixels in the chain to the colour and brightness (optional)\ndef set_all_rand():\n    for x in range(NUM_PIXELS):\n        set_pix(x, randint(0,255), randint(0,255), randint(0,255), randint(0,255))\n\n# Set all of the pixels in the chain to the colour and brightness (optional)\ndef set_brightness_gradient():\n    for y in range(16):\n        for x in range(16):\n            set_pix(y*16 + x, randint(0,255), randint(0,255), randint(0,255), randint(0,255))\n"],[1,"1)"],[0,"\n\n# "]],"start1":2595,"start2":2595,"length1":488,"length2":10},{"diffs":[[0," off\n   "],[-1," #"],[0," clear()"]],"start1":2652,"start2":2652,"length1":18,"length2":16},{"diffs":[[0," clear()\n   "],[-1," #"],[0," show()\n    "]],"start1":2660,"start2":2660,"length1":26,"length2":24},{"diffs":[[0,"()\n    #"],[-1," #"],[0,"     bas"]],"start1":2810,"start2":2810,"length1":18,"length2":16},{"diffs":[[0,"use(100)\n   "],[-1," #"],[0," set_all(255"]],"start1":2831,"start2":2831,"length1":26,"length2":24},{"diffs":[[0,",0,0"],[-1,",7"],[0,")\n    #"],[-1," show()\n    # #"],[0," bas"]],"start1":2855,"start2":2855,"length1":32,"length2":15},{"diffs":[[0,"(1000)\n    #"],[-1," #"],[0," all green\n "]],"start1":2878,"start2":2878,"length1":26,"length2":24},{"diffs":[[0,"ll green\n   "],[-1," #"],[0," set_all(0,2"]],"start1":2892,"start2":2892,"length1":26,"length2":24},{"diffs":[[0,"(0,255,0"],[-1,",7"],[0,")\n   "],[-1," #"],[0," show()\n"]],"start1":2912,"start2":2912,"length1":25,"length2":21},{"diffs":[[0,"    show()\n    #"],[-1," #"],[0," basic.pause(100"]],"start1":2922,"start2":2922,"length1":34,"length2":32},{"diffs":[[0,"0)\n    #"],[-1," #"],[0," all blu"]],"start1":2954,"start2":2954,"length1":18,"length2":16},{"diffs":[[0,"all blue\n   "],[-1," #"],[0," set_all(0,0"]],"start1":2963,"start2":2963,"length1":26,"length2":24},{"diffs":[[0,"_all(0,0,255"],[-1,",7"],[0,")\n   "],[-1," #"],[0," show()\n    "]],"start1":2979,"start2":2979,"length1":33,"length2":29},{"diffs":[[0,"  # "],[-1,"set_all(255,255,255,7)\n    # show()\n    # # basic.pause(1000)\n\n    set_all_rand()\n    show()\n"],[1,"basic.pause(1000)"],[0,"\n"]],"start1":3006,"start2":3006,"length1":98,"length2":22}]}]},{"timestamp":1740846226879,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"tness)\n    }\n}\n\n"],[1,"//  Set all of the pixels in the chain to the colour and brightness (optional)\n"],[0,"function set_all"]],"start1":3062,"start2":3062,"length1":32,"length2":111},{"diffs":[[0," 255))\n    }\n}\n\n"],[1,"//  Set all of the pixels in the chain to the colour and brightness (optional)\n"],[0,"function set_bri"]],"start1":3306,"start2":3306,"length1":32,"length2":111},{"diffs":[[0," x, "],[-1,"255, 255, 255, Math.abs(7.5 - y / 16.))\n        }\n    }\n}\n\nfunction set_brightness_inv_gra"],[1,"randint(0, 255), ran"],[0,"di"],[-1,"e"],[0,"nt("],[-1,") {\n    for (let y = 0; y < 16; y++) {\n        for (let x = 0; x < 16; x++) {\n            set_pix(y * 16 + x"],[1,"0"],[0,", 255"],[1,")"],[0,", "],[-1,"255"],[1,"randint(0"],[0,", 255"],[1,")"],[0,", "],[-1,"1.0 - Math.abs(7.5 - y / 16."],[1,"randint(0, 255"],[0,"))\n "]],"start1":3540,"start2":3540,"length1":257,"length2":73},{"diffs":[[0,"use(1000)\n  "],[-1,"  //"],[0,"  set_all_ra"]],"start1":4182,"start2":4182,"length1":28,"length2":24},{"diffs":[[0,"   s"],[-1,"et_brightness_gradient()\n    basic.pause(10)\n    show()\n    basic.pause(1500)\n    set_brightness_inv_gradient()\n    basic.pause(10)\n    show()\n    basic.pause(1500"],[1,"how("],[0,")\n}\n"]],"start1":4212,"start2":4212,"length1":171,"length2":12}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[0,"tness)\n\n"],[1,"# Set all of the pixels in the chain to the colour and brightness (optional)\n"],[0,"def set_"]],"start1":2621,"start2":2621,"length1":16,"length2":93},{"diffs":[[0,"nt(0,255))\n\n"],[1,"# Set all of the pixels in the chain to the colour and brightness (optional)\n"],[0,"def set_brig"]],"start1":2830,"start2":2830,"length1":24,"length2":101},{"diffs":[[0," x, "],[-1,"255, 255, "],[1,"randint(0,"],[0,"255"],[1,")"],[0,", "],[-1,"abs(7.5 - y/16.))\n\ndef set_brightness_inv_g"],[0,"ra"],[1,"n"],[0,"di"],[-1,"e"],[0,"nt("],[-1,"):\n    for y in range(16):\n        for x in range(16):\n            set_pix(y*16 + x, "],[1,"0,255), randint(0,"],[0,"255"],[1,")"],[0,", "],[-1,"255, 255, 1.0 - abs(7.5 - y/16."],[1,"randint(0,255"],[0,"))\n\n\n"],[-1,"\n"],[0,"# Te"]],"start1":3028,"start2":3028,"length1":201,"length2":74},{"diffs":[[0,"e(1000)\n\n   "],[-1," #"],[0," set_all_ran"]],"start1":3602,"start2":3602,"length1":26,"length2":24},{"diffs":[[0,"   s"],[-1,"et_brightness_gradient()\n    basic.pause(10)\n    show()\n    basic.pause(1500)\n    set_brightness_inv_gradient()\n    basic.pause(10)\n    show()\n    basic.pause(1500)"],[1,"how()\n"],[0,"\n"]],"start1":3631,"start2":3631,"length1":169,"length2":11}]}]},{"timestamp":1740846800810,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"//  def on_forever():\n//      led.toggle(randint(0, 4), randint(0, 4))\n//      basic.pause(100)\n//  basic.forever(on_forever)\n"],[0,"//  to remin"]],"start1":0,"start2":0,"length1":12,"length2":138},{"diffs":[[0,"ixels()\n"],[1,"//  pixels = [\n//      [0, 0, 0, BRIGHTNESS],\n//      [0, 0, 0, BRIGHTNESS],\n//      [0, 0, 0, BRIGHTNESS]\n//  ]\n"],[0,"//  Set "]],"start1":742,"start2":742,"length1":16,"length2":129},{"diffs":[[0,"}\n}\n\n// "],[-1," #"],[0," Pulse a"]],"start1":1319,"start2":1319,"length1":18,"length2":16},{"diffs":[[0," a time\n"],[-1,"//  def"],[1,"function"],[0," write_b"]],"start1":1357,"start2":1357,"length1":23,"length2":24},{"diffs":[[0,"yte(byte"],[-1,"):\n//"],[1,": number) {\n"],[0,"    "],[1,"//"],[0,"  bits ="]],"start1":1381,"start2":1381,"length1":25,"length2":34},{"diffs":[[0," = ["],[-1,"]\n//     "],[1,"byte >> i & 1"],[0," for"]],"start1":1413,"start2":1413,"length1":17,"length2":21},{"diffs":[[0,"e(7,"],[-1," "],[0,"-1,"],[-1," "],[0,"-1)"],[-1,":\n//   "],[1,"]\n"],[0,"    "],[-1,"  "],[1,"let"],[0," bits"],[-1,".append((byte >> i) & 1)\n//      for x in range(8):\n//          pins.digital_write_pin(DAT, bits[x])\n//          pins.digital_write_pin(CLK,1)\n//          pins.digital_write_pin(CLK,0)\n//  Pulse a byte of data a bit at a time (optimized)\nfunction write_byte(byte: number) {"],[1," = []\n    for (let i = 7; i > -1; i += -1) {\n        bits.push(byte >> i & 1)\n    }"],[0,"\n   "]],"start1":1444,"start2":1444,"length1":307,"length2":111},{"diffs":[[0,"let "],[-1,"i = 7; i > -1; i += -1) {\n        //  Send 8 bits, MSB first"],[1,"x = 0; x < 8; x++) {"],[0,"\n   "]],"start1":1561,"start2":1561,"length1":68,"length2":28},{"diffs":[[0,"n(DAT, b"],[-1,"yte >> i & 1"],[1,"its[x]"],[0,")\n      "]],"start1":1613,"start2":1613,"length1":28,"length2":22},{"diffs":[[0,"Math.abs(7.5 - y"],[-1,")"],[0," / "],[-1,"8."],[1,"16.)"],[0,")\n        }\n    "]],"start1":3401,"start2":3401,"length1":38,"length2":39},{"diffs":[[0," - y"],[-1,")"],[0," / "],[-1,"8."],[1,"16.)"],[0,")\n  "]],"start1":3625,"start2":3625,"length1":14,"length2":15}]},{"type":"edited","filename":"main.py","patch":[{"diffs":[[1,"# def on_forever():\n#     led.toggle(randint(0, 4), randint(0, 4))\n#     basic.pause(100)\n\n\n# basic.forever(on_forever)\n\n"],[0,"# to rem"]],"start1":0,"start2":0,"length1":8,"length2":129},{"diffs":[[0,"pixels()"],[1,"\n# pixels = [\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS]\n# ]"],[0,"\n\n# Set "]],"start1":658,"start2":658,"length1":16,"length2":119},{"diffs":[[0,"i] = 0\n\n"],[-1,"# "],[0,"# Pulse "]],"start1":1123,"start2":1123,"length1":18,"length2":16},{"diffs":[[0," a time\n"],[-1,"# "],[0,"def writ"]],"start1":1162,"start2":1162,"length1":18,"length2":16},{"diffs":[[0,"(byte):\n"],[-1,"#"],[0,"    "],[1,"#"],[0," bits = "]],"start1":1184,"start2":1184,"length1":21,"length2":21},{"diffs":[[0," = ["],[-1,"]\n#    "],[1,"byte >> i & 1"],[0," for"]],"start1":1202,"start2":1202,"length1":15,"length2":21},{"diffs":[[0,"e(7,"],[-1," "],[0,"-1,"],[-1," "],[0,"-1)"],[-1,":\n#  "],[1,"]\n"],[0,"    "],[-1,"   "],[0,"bits"],[-1,".append((byte >> i) & 1)\n\n#"],[1," = []\n"],[0,"    "],[-1," "],[0,"for "],[-1,"x"],[1,"i"],[0," in "]],"start1":1233,"start2":1233,"length1":69,"length2":39},{"diffs":[[0,"nge("],[-1,"8):\n#         pins.digital_write_pin(DAT, bits[x])\n#         pins.digital_write_pin(CLK,1)\n#         pins.digital_write_pin(CLK,0)\n        \n\n# Pulse a byte of data a bit at a time (optimized)\ndef write_byte(byte):"],[1,"7, -1, -1):\n        bits.append((byte >> i) & 1)\n"],[0,"\n   "]],"start1":1274,"start2":1274,"length1":221,"length2":57},{"diffs":[[0,") & 1)\n\n    for "],[-1,"i"],[1,"x"],[0," in range(7, -1,"]],"start1":1320,"start2":1320,"length1":33,"length2":33},{"diffs":[[0,"nge("],[-1,"7, -1, -1):  # Send 8 bits, MSB first"],[1,"8):"],[0,"\n   "]],"start1":1343,"start2":1343,"length1":45,"length2":11},{"diffs":[[0,"in(DAT, "],[-1,"(byte >> i) & 1"],[1,"bits[x]"],[0,")\n      "]],"start1":1379,"start2":1379,"length1":31,"length2":23},{"diffs":[[0,"pin(CLK,"],[-1," "],[0,"1)\n     "]],"start1":1423,"start2":1423,"length1":17,"length2":16},{"diffs":[[0,"pin(CLK,"],[-1," "],[0,"0)\n"],[1,"        "],[0,"\n# Latch"]],"start1":1461,"start2":1461,"length1":20,"length2":27},{"diffs":[[0,"(7.5 - y"],[-1,")/8."],[1,"/16.)"],[0,")\n\ndef s"]],"start1":2896,"start2":2896,"length1":20,"length2":21},{"diffs":[[0," - y"],[-1,")/8."],[1,"/16.)"],[0,")\n\n\n"]],"start1":3057,"start2":3057,"length1":12,"length2":13}]}]},{"timestamp":1740846979231,"editorVersion":"7.0.57","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"iables><"],[1,"block type=\"pxt-on-start\" x=\"32\" y=\"54\"></block><block type=\"device_forever\" x=\"46\" y=\"338\"><statement name=\"HANDLER\"><block type=\"device_led_toggle\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></statement></block><"],[0,"/xml>"]],"start1":71,"start2":71,"length1":13,"length2":1079}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":381,"start2":381,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"}]}],"snapshots":[{"timestamp":1740838090070,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"apa102\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1740839892080,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"device_forever\" x=\"0\" y=\"0\"><statement name=\"HANDLER\"><block type=\"device_plot\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow></value></block></statement></block></xml>","main.ts":"basic.forever(function on_forever() {\n    const buf = hex`ff0000ff ff00ff00 ffff0000`; // red, green, blue colors\n    apa102.sendBuffer(buf, DigitalPin.P0, DigitalPin.P1);\n})\n","README.md":"","main.py":"def on_forever():\n    led.plot(0, 0)\nbasic.forever(on_forever)\n","pxt.json":"{\n    \"name\": \"apa102\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"apa102\": \"github:microsoft/pxt-apa102#v0.0.1\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}},{"timestamp":1740841711219,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"32\" y=\"54\"><statement name=\"HANDLER\"><block type=\"device_plot\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"brightboard.do_clear()\nbrightboard.set_board_color(0xff0000)","pxt.json":"{\n    \"name\": \"apa102\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"apa102\": \"github:microsoft/pxt-apa102#v0.0.1\",\n        \"brightboard\": \"github:brightwearables/pxt-microbit-brightboard#v0.7.2\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"blocksprj\"\n}\n"}},{"timestamp":1740843641511,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"32\" y=\"54\"></block><block type=\"device_forever\" x=\"46\" y=\"338\"><statement name=\"HANDLER\"><block type=\"device_led_toggle\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"def on_forever():\n    led.toggle(randint(0, 4), randint(0, 4))\n    basic.pause(100)\n\n\nbasic.forever(on_forever)\n\n# to remind us which pin serves which function\nDAT = DigitalPin.P1\nCLK = DigitalPin.P0\n# number of pixels in the chain\nNUM_PIXELS = 3\n# default brightness setting\nBRIGHTNESS = 7\n# list of pixels\n# pixels = [[1,2,3,4], [1,2,3,4], [1,2,3,4]]\n# Initialize pixel list manually (avoiding list comprehensions)\ndef init_pixels():\n    pixel_list = []\n    for i in range(NUM_PIXELS):\n        pixel_list.append([0, 0, 0, BRIGHTNESS])  # Each pixel is a list of [R, G, B, Brightness]\n    return pixel_list\n\n# Initialize pixels list\npixels = init_pixels()\n# pixels = [\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS]\n# ]\n\n# Set the brightness of all pixels - 0 - 1.\ndef set_brightness(brightness):\n    if brightness < 0 or brightness > 1:\n        return\n    for x in range(NUM_PIXELS):\n        pixels[x][3] = int(31.0 * brightness) & 0b11111\n\n# Pulse a byte of data a bit at a time\ndef write_byte(byte):\n    # bits = [byte >> i & 1 for i in range(7,-1,-1)]\n    bits = []\n    for i in range(7, -1, -1):\n        bits.append((byte >> i) & 1)\n\n    for x in range(8):\n        pins.digital_write_pin(DAT, bits[x])\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n","pxt.json":"{\n    \"name\": \"apa102\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"apa102\": \"github:microsoft/pxt-apa102#v0.0.1\",\n        \"brightboard\": \"github:brightwearables/pxt-microbit-brightboard#v0.7.2\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1740845443879,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"32\" y=\"54\"></block><block type=\"device_forever\" x=\"46\" y=\"338\"><statement name=\"HANDLER\"><block type=\"device_led_toggle\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"# def on_forever():\n#     led.toggle(randint(0, 4), randint(0, 4))\n#     basic.pause(100)\n\n\n# basic.forever(on_forever)\n\n# to remind us which pin serves which function\nDAT = DigitalPin.P1\nCLK = DigitalPin.P0\n# number of pixels in the chain\nNUM_PIXELS = 3\n# default brightness setting\nBRIGHTNESS = 7\n# list of pixels\n# pixels = [[1,2,3,4], [1,2,3,4], [1,2,3,4]]\n# Initialize pixel list manually (avoiding list comprehensions)\ndef init_pixels():\n    pixel_list = []\n    for i in range(NUM_PIXELS):\n        pixel_list.append([0, 0, 0, BRIGHTNESS])  # Each pixel is a list of [R, G, B, Brightness]\n    return pixel_list\n\n# Initialize pixels list\npixels = init_pixels()\n# pixels = [\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS],\n#     [0, 0, 0, BRIGHTNESS]\n# ]\n\n# Set the brightness of all pixels - 0 - 1.\ndef set_brightness(brightness):\n    if brightness < 0 or brightness > 1:\n        return\n    for x in range(NUM_PIXELS):\n        pixels[x][3] = int(31.0 * brightness) & 0b11111\n\n# Clear all of the pixels        \ndef clear():\n    for x in range(NUM_PIXELS):\n        for i in range(0, 3):\n            pixels[x][i] = 0\n\n# Pulse a byte of data a bit at a time\ndef write_byte(byte):\n    # bits = [byte >> i & 1 for i in range(7,-1,-1)]\n    bits = []\n    for i in range(7, -1, -1):\n        bits.append((byte >> i) & 1)\n\n    for x in range(8):\n        pins.digital_write_pin(DAT, bits[x])\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n        \n# Latch procedure - 36 clock pulses        \ndef eof():\n    pins.digital_write_pin(DAT, 0)\n    for x in range(36):\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n\n# Latch at start - 32 clock pulses\ndef sof():\n    pins.digital_write_pin(DAT, 0)\n    for x in range(32):\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n\n# Update colour and brightness values from pixels list\n# Call this procedure to update the display\ndef show():\n    sof()\n    for pixel in pixels:\n        r, g, b, brightness = pixel\n        write_byte(0b11100000 | brightness)\n        write_byte(b)\n        write_byte(g)\n        write_byte(r)\n    eof()\n\n# Set the colour and brightness of an individual pixel\ndef set_pix(x, rr, gg, bb, brightness=None):\n    if brightness is None:\n        brightness = BRIGHTNESS\n    else:\n        brightness = int(31.0 * brightness) & 0b11111\n    pixels[x] = [rr & 0xff,gg & 0xff,bb & 0xff,brightness]\n\n# Set all of the pixels in the chain to the colour and brightness (optional)\ndef set_all(r, g, b):\n    for x in range(NUM_PIXELS):\n        set_pix(x, r, g, b, 1)\n\n# Test code and example use\nwhile True:\n    # all off\n    clear()\n    show()\n    basic.pause(1000)\n    print(\"hello\")\n    # on red individually\n    for i in range(NUM_PIXELS):\n        set_pix(i, 255, 0, 0)\n        show()\n        basic.pause(100)\n    basic.pause(1000)\n    # all green\n    set_all(0,255,0)\n    show()\n    basic.pause(1000)\n    # all blue\n    set_all(0,0,255)\n    show()\n    basic.pause(1000)\n","pxt.json":"{\n    \"name\": \"apa102\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"apa102\": \"github:microsoft/pxt-apa102#v0.0.1\",\n        \"brightboard\": \"github:brightwearables/pxt-microbit-brightboard#v0.7.2\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}},{"timestamp":1740847415343,"editorVersion":"7.0.57","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"32\" y=\"54\"></block><block type=\"device_forever\" x=\"46\" y=\"338\"><statement name=\"HANDLER\"><block type=\"device_led_toggle\"><value name=\"x\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"X\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><value name=\"y\"><shadow type=\"math_number_minmax\"><mutation min=\"0\" max=\"4\" label=\"Y\" precision=\"1\"></mutation><field name=\"SLIDER\">0</field></shadow><block type=\"device_random\"><value name=\"min\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow></value><value name=\"limit\"><shadow type=\"math_number\"><field name=\"NUM\">4</field></shadow></value></block></value><next><block type=\"device_pause\"><value name=\"pause\"><shadow type=\"timePicker\"><field name=\"ms\">100</field></shadow></value></block></next></block></statement></block></xml>","main.ts":"","README.md":"","main.py":"# to remind us which pin serves which function\nDAT = DigitalPin.P1\nCLK = DigitalPin.P0\n# number of pixels in the chain\nNUM_PIXELS = 256\n# default brightness setting\nBRIGHTNESS = 7\n# list of pixels\n# pixels = [[1,2,3,4], [1,2,3,4], [1,2,3,4]]\n# Initialize pixel list manually (avoiding list comprehensions)\ndef init_pixels():\n    pixel_list = []\n    for i in range(NUM_PIXELS):\n        pixel_list.append([0, 0, 0, BRIGHTNESS])  # Each pixel is a list of [R, G, B, Brightness]\n    return pixel_list\n\n# Initialize pixels list\npixels = init_pixels()\n\n# Set the brightness of all pixels - 0 - 1.\ndef set_brightness(brightness):\n    if brightness < 0 or brightness > 1:\n        return\n    for x in range(NUM_PIXELS):\n        pixels[x][3] = int(31.0 * brightness) & 0b11111\n\n# Clear all of the pixels        \ndef clear():\n    for x in range(NUM_PIXELS):\n        for i in range(0, 3):\n            pixels[x][i] = 0\n\n# # Pulse a byte of data a bit at a time\n# def write_byte(byte):\n#     bits = []\n#     for i in range(7, -1, -1):\n#         bits.append((byte >> i) & 1)\n\n#     for x in range(8):\n#         pins.digital_write_pin(DAT, bits[x])\n#         pins.digital_write_pin(CLK,1)\n#         pins.digital_write_pin(CLK,0)\n        \n\n# Pulse a byte of data a bit at a time (optimized)\ndef write_byte(byte):\n    for i in range(7, -1, -1):  # Send 8 bits, MSB first\n        pins.digital_write_pin(DAT, (byte >> i) & 1)\n        pins.digital_write_pin(CLK, 1)\n        pins.digital_write_pin(CLK, 0)\n\n# Latch procedure - 36 clock pulses        \ndef eof():\n    pins.digital_write_pin(DAT, 0)\n    for x in range(36):\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n\n# Latch at start - 32 clock pulses\ndef sof():\n    pins.digital_write_pin(DAT, 0)\n    for x in range(32):\n        pins.digital_write_pin(CLK,1)\n        pins.digital_write_pin(CLK,0)\n\n# Update colour and brightness values from pixels list\n# Call this procedure to update the display\ndef show():\n    sof()\n    for pixel in pixels:\n        r, g, b, brightness = pixel\n        write_byte(0b11100000 | brightness)\n        write_byte(b)\n        write_byte(g)\n        write_byte(r)\n    eof()\n\n# Set the colour and brightness of an individual pixel\ndef set_pix(x, rr, gg, bb, brightness=None):\n    if brightness is None:\n        brightness = BRIGHTNESS\n    else:\n        brightness = int(31.0 * brightness) & 0b11111\n    pixels[x] = [rr & 0xff,gg & 0xff,bb & 0xff,brightness]\n\n# Set all of the pixels in the chain to the colour and brightness (optional)\ndef set_all(r, g, b, brightness=None):\n    for x in range(NUM_PIXELS):\n        set_pix(x, r, g, b, brightness)\n\ndef set_all_rand():\n    for x in range(NUM_PIXELS):\n        set_pix(x, randint(0,255), randint(0,255), randint(0,255), randint(0,255))\n\ndef set_brightness_gradient():\n    for y in range(16):\n        for x in range(16):\n            set_pix(y*16 + x, 255, 255, 255, abs(7.5 - y)/8.)\n\ndef set_brightness_inv_gradient():\n    for y in range(16):\n        for x in range(16):\n            set_pix(y*16 + x, 255, 255, 255, 1.0 - abs(7.5 - y)/8.)\n\n\n\n# Test code and example use\nwhile True:\n    # all off\n    # clear()\n    # show()\n    # basic.pause(1000)\n    # on red individually\n    # for i in range(NUM_PIXELS):\n    #     set_pix(i, 255, 0, 0)\n    #     show()\n    # #     basic.pause(100)\n    # set_all(255,0,0,7)\n    # show()\n    # # basic.pause(1000)\n    # # all green\n    # set_all(0,255,0,7)\n    # show()\n    # # basic.pause(1000)\n    # # all blue\n    # set_all(0,0,255,7)\n    # show()\n    # set_all(255,255,255,7)\n    # show()\n    # # basic.pause(1000)\n\n    # set_all_rand()\n    set_brightness_gradient()\n    basic.pause(10)\n    show()\n    basic.pause(1500)\n    set_brightness_inv_gradient()\n    basic.pause(10)\n    show()\n    basic.pause(1500)\n","pxt.json":"{\n    \"name\": \"apa102\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"apa102\": \"github:microsoft/pxt-apa102#v0.0.1\",\n        \"brightboard\": \"github:brightwearables/pxt-microbit-brightboard#v0.7.2\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"main.py\"\n    ],\n    \"preferredEditor\": \"pyprj\"\n}\n"}}],"shares":[],"lastSaveTime":1740847415352}